; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "HevcPlayerPlugin"
#define MyAppVersion "0.1.5"
#define MyAppPublisher "HevcPlayerPlugin"
#define MyAppURL "HevcPlayerPlugin"
#define MyAppExeName "HevcPlayerPlugin.exe"
#define MyAppServiceName MyAppName + "Service"
//程序默认安装目录
#define MyAppInstallPath "C:\Program Files (x86)\" + MyAppName
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt
#define MyUid "AFB2A4E1-586A-49BC-AD95-BFE9EE2A9DB8"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{{#MyUid}}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={#MyAppInstallPath}
DisableDirPage=no
ChangesAssociations=yes
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename={#MyAppName} Setup-{#MyAppVersion}
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

//[Tasks]
//Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "..\..\BuildOut\Release\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\..\BuildOut\Release\*.dll"; DestDir: "{app}"; Flags: ignoreversion 
Source: "..\..\conf\*"; DestDir: "{app}\conf"; Flags: ignoreversion 
Source: "..\..\htdocs\player\*"; DestDir: "{app}\player"; Flags: ignoreversion recursesubdirs
Source: "..\..\docs\接口文档.md"; DestDir: "{app}\docs"; Flags: ignoreversion recursesubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
Root:HKCR;Subkey:"{#MyAppName}Protocol";ValueType:string;ValueName:"URL Protocol";ValueData:"{app}\{#MyAppExeName}";Flags:createvalueifdoesntexist uninsdeletekey
Root:HKCR;Subkey:"{#MyAppName}Protocol\DefaultIcon";ValueType:string;ValueData:"{app}\{#MyAppExeName}";Flags:createvalueifdoesntexist uninsdeletekey  
Root:HKCR;Subkey:"{#MyAppName}Protocol\shell";Flags:createvalueifdoesntexist uninsdeletekey
Root:HKCR;Subkey:"{#MyAppName}Protocol\shell\open";Flags:createvalueifdoesntexist uninsdeletekey
Root:HKCR;Subkey:"{#MyAppName}Protocol\shell\open\command";ValueType:string;ValueData:"{app}\{#MyAppExeName} ""%1""";Flags:createvalueifdoesntexist uninsdeletekey

//    OnlyBelowVersion: 0,6.2;
[Tasks]
Name: "startupicon"; Description: "Automatic Start"; GroupDescription: "{cm:AdditionalIcons}"; Flags: exclusive 
[Icons]                                                                                                
Name: "{commonstartup}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: startupicon

[Run]
Filename: "{app}\player\index.html"; Description: "view example web page"; Flags: postinstall shellexec skipifsilent unchecked
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait  skipifsilent

[Code]
//[Code]-指定 Pascal 脚本的可选区段
//路径参照两个博客：
//https://blog.csdn.net/c1007857613/article/details/81475167
//https://www.cnblogs.com/csuftzzk/p/innosetup_read_registry.html
//全局变量保存安装路径
var 
  globalInstallPath: String;

//初始化时把路径设置到编辑框
procedure InitializeWizard;
begin
  WizardForm.DirEdit.Text := globalInstallPath;
end;

//检测程序是否运行
function IsAppRunning(const FileName: string): Boolean;
var
  FWMIService: Variant;
  FSWbemLocator: Variant;
  FWbemObjectSet: Variant;
begin
  Result := false;
  FSWbemLocator := CreateOleObject('WBEMScripting.SWBEMLocator');
  FWMIService := FSWbemLocator.ConnectServer('', 'root\CIMV2', '', '');
  FWbemObjectSet := FWMIService.ExecQuery(Format('SELECT Name FROM Win32_Process Where Name="%s"',[FileName]));
  Result := (FWbemObjectSet.Count > 0);
  FWbemObjectSet := Unassigned;
  FWMIService := Unassigned;
  FSWbemLocator := Unassigned;
end;

//获取历史安装路径，Inno Setup保存的一些信息可自己在注册表中查看
//64位会映射到：计算机\HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall
function GetInstallString(): String;
var
  InstallPath: String;
begin
  InstallPath := '{#MyAppInstallPath}';
  if RegValueExists(HKLM, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{{#MyUid}}_is1', 'Inno Setup: App Path') then
    begin
      RegQueryStringValue(HKLM, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{{#MyUid}}_is1', 'Inno Setup: App Path', InstallPath)
    end;
  result := InstallPath;
end;

//准备安装
function InitializeSetup(): Boolean;  
var   
  ResultCode: Integer;  
begin     
  globalInstallPath := GetInstallString();
  result := IsAppRunning('{#MyAppExeName}');
  if result then
    begin
      if MsgBox('检测到{#MyAppName}正在运行，是否强制退出？', mbConfirmation, MB_YESNO) = IDYES then 
        begin
          // 强制杀死进程
          ShellExec('open','taskkill.exe','/f /im {#MyAppExeName}','',SW_HIDE,ewNoWait,ResultCode);
          ShellExec('open','tskill.exe',' {#MyAppName}','',SW_HIDE,ewNoWait,ResultCode);
        end
      else 
        begin
          result:=false;
        end;
    end
  else
    begin
        result:=true; 
    end;
end;

//准备卸载
function InitializeUninstall(): Boolean;
  var  ResultCode: Integer;  
begin
  
  result := IsAppRunning('{#MyAppExeName}');
  if result then
    begin
      if MsgBox('检测到{#MyAppName}正在运行，是否强制退出？ ', mbConfirmation, MB_YESNO) = IDYES then
        begin
          // 强制杀死进程
          ShellExec('open','taskkill.exe','/f /im {#MyAppExeName}','',SW_HIDE,ewNoWait,ResultCode);
          ShellExec('open','tskill.exe',' {#MyAppName}','',SW_HIDE,ewNoWait,ResultCode);
          result:=true;
        end
      else
        begin
          result:=false;
        end
    end
  else
    begin
      result:=true;
    end
end;
